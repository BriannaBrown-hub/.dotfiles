"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createProcess = void 0;

var _child_process = require("child_process");

var _project_workspace = _interopRequireDefault(require("./project_workspace"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/**
 * Spawns and returns a Jest process with specific args
 *
 * @param {string[]} args
 * @returns {ChildProcess}
 */
// eslint-disable-next-line import/prefer-default-export
var createProcess = function createProcess(workspace, args) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  // A command could look like `npm run test`, which we cannot use as a command
  // as they can only be the first command, so take out the command, and add
  // any other bits into the args
  var runtimeExecutable = workspace.pathToJest;
  var parameters = runtimeExecutable.split(' ');
  var command = parameters[0];
  var initialArgs = parameters.slice(1);
  var runtimeArgs = [].concat(initialArgs, args); // If a path to configuration file was defined, push it to runtimeArgs

  if (workspace.pathToConfig) {
    runtimeArgs.push('--config');
    runtimeArgs.push(workspace.pathToConfig);
  } // To use our own commands in create-react, we need to tell the command that
  // we're in a CI environment, or it will always append --watch


  var _process = process,
      env = _process.env;
  env.CI = 'true';
  var spawnOptions = {
    cwd: workspace.rootPath,
    env: env,
    shell: options.shell
  };

  if (workspace.debug) {
    // eslint-disable-next-line no-console
    console.log("spawning process with command=".concat(command, ", args=").concat(runtimeArgs.toString()));
  }

  return (0, _child_process.spawn)(command, runtimeArgs, spawnOptions);
};

exports.createProcess = createProcess;