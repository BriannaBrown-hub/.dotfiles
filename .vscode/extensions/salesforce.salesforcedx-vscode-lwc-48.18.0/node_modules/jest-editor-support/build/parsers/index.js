"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parse;

var _parser_nodes = require("./parser_nodes");

var _babylon_parser = require("./babylon_parser");

var _typescript_parser = require("./typescript_parser");

/**
 * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/**
 * parse the test file by selecting proper parser based on the file extension.
 *
 * exception will be throw should the underlying parse failed.
 */
function parse(file, data) {
  var strict = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  if (file.match(/\.tsx?$/)) {
    return (0, _typescript_parser.parse)(file, data);
  }

  if (file.match(/\.jsx?$/)) {
    return (0, _babylon_parser.parse)(file, data);
  } // unexpected file extension, for backward compatibility, will use js parser


  if (strict) {
    throw new TypeError("unable to find parser for unrecognized file extension: ".concat(file));
  }

  return (0, _babylon_parser.parse)(file, data);
}