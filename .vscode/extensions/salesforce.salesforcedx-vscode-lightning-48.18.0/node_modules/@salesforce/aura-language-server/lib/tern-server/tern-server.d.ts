import * as tern from '../tern/lib/tern';
import { TextDocumentPositionParams, CompletionList, Hover, Location, TextDocumentChangeEvent, CompletionParams, ReferenceParams, SignatureHelp, Definition } from 'vscode-languageserver';
interface ITernServer extends tern.Server {
    files: ITernFile[];
    cx: any;
    normalizeFilename(file: string): string;
    /**
     * Register a file with the server. Note that files can also be included in requests. When using this
     * to automatically load a dependency, specify the name of the file (as Tern knows it) as the third
     * argument. That way, the file is counted towards the dependency budget of the root of its dependency graph.
     */
    addFile(name: string, text?: string, parent?: string): void;
    /** Unregister a file. */
    delFile(name: string): void;
    /** Forces all files to be fetched an analyzed, and then calls the callback function. */
    flush(callback: () => void): void;
    /**
     * Perform a request. `doc` is a (parsed) JSON document as described in the protocol documentation.
     * The `callback` function will be called when the request completes. If an `error` occurred,
     * it will be passed as a first argument. Otherwise, the `response` (parsed) JSON object will be passed as second argument.
     *
     * When the server hasnâ€™t been configured to be asynchronous, the callback will be called before request returns.
     */
    request(doc: any, callback: any): void;
}
interface ITernFile {
    name: string;
    text: string;
}
export declare function startServer(rootPath: string, wsroot: string): Promise<ITernServer>;
export declare const addFile: (event: TextDocumentChangeEvent) => void;
export declare const delFile: (close: TextDocumentChangeEvent) => void;
export declare const onCompletion: (completionParams: CompletionParams) => Promise<CompletionList>;
export declare const onHover: (textDocumentPosition: TextDocumentPositionParams) => Promise<Hover>;
export declare const onTypeDefinition: (textDocumentPosition: TextDocumentPositionParams) => Promise<Definition>;
export declare const onDefinition: (textDocumentPosition: TextDocumentPositionParams) => Promise<Location>;
export declare const onReferences: (reference: ReferenceParams) => Promise<Location[]>;
export declare const onSignatureHelp: (signatureParams: TextDocumentPositionParams) => Promise<SignatureHelp>;
export {};
//# sourceMappingURL=tern-server.d.ts.map