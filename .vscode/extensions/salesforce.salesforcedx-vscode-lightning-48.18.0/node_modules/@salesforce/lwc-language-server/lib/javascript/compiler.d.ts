import { SourceLocation } from 'babel-types';
import { Diagnostic, Range, TextDocument } from 'vscode-languageserver';
import { ClassMember } from '@lwc/babel-plugin-component';
import { AttributeInfo } from '@salesforce/lightning-lsp-common';
import { Metadata } from '@lwc/babel-plugin-component';
export interface ICompilerResult {
    diagnostics?: Diagnostic[];
    metadata?: Metadata;
}
export declare function getPublicReactiveProperties(metadata: Metadata): ClassMember[];
export declare function getPrivateReactiveProperties(metadata: Metadata): ClassMember[];
export declare function getApiMethods(metadata: Metadata): ClassMember[];
export declare function getProperties(metadata: Metadata): ClassMember[];
export declare function getMethods(metadata: Metadata): ClassMember[];
/**
 * Use to compile a live document (contents may be different from current file in disk)
 */
export declare function compileDocument(document: TextDocument): Promise<ICompilerResult>;
export declare function compileFile(file: string): Promise<ICompilerResult>;
export declare function compileSource(source: string, fileName?: string): Promise<ICompilerResult>;
export declare function extractAttributes(metadata: Metadata, uri: string): {
    privateAttributes: AttributeInfo[];
    publicAttributes: AttributeInfo[];
};
export declare function toVSCodeRange(babelRange: SourceLocation): Range;
export declare function extractLocationFromBabelError(message: string): any;
export declare function extractMessageFromBabelError(message: string): string;
//# sourceMappingURL=compiler.d.ts.map