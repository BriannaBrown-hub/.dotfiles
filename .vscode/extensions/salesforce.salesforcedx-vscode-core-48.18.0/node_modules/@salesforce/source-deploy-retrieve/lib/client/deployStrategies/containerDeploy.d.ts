import { MetadataComponent, DeployResult } from '../../types';
import { ToolingCreateResult } from '../../utils/deploy';
import { BaseDeploy } from './baseDeploy';
export declare class ContainerDeploy extends BaseDeploy {
    deploy(component: MetadataComponent): Promise<DeployResult>;
    createMetadataContainer(): Promise<ToolingCreateResult>;
    createContainerMember(outboundFiles: string[], container: ToolingCreateResult): Promise<ToolingCreateResult>;
    getContentEntity(metadataType: string, fileName: string): Promise<{
        Id?: string | unknown;
    }>;
    createContainerAsyncRequest(container: ToolingCreateResult): Promise<ToolingCreateResult>;
    private sleep;
    toolingStatusCheck(asyncRequest: ToolingCreateResult): Promise<DeployResult>;
    private toolingRetrieve;
}
